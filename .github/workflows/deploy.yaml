name: Build & Push Docker Image to GHCR

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      GHCR_IMAGE: ghcr.io/${{ github.repository }}:latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Build Jar
        run: ./gradlew clean build

      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: downcase REPO
        run: |
          echo "GHCR_IMAGE=${GHCR_IMAGE,,}" >>${GITHUB_ENV}

      - name: Build and Push Docker Image
        run: |
          docker build -t $GHCR_IMAGE .
          docker push $GHCR_IMAGE

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    env:
      WORKDIR: /opt/${{ github.repository }}

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: downcase WORKDIR
        run: |
          echo "WORKDIR=$(echo ${{ env.WORKDIR }} | tr '[:upper:]' '[:lower:]')" >>${GITHUB_ENV}

      - name: Package files into archive
        run: |
          ls -al
          tar -czf deployment.tar.gz \
            compose.yml \
            keycloak \
            monitoring
  
      - name: Upload and extract archive on VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_SSH_HOST }}
          username: ${{ secrets.VPS_SSH_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            mkdir -p ${{ env.WORKDIR }}
            cat > ${{ env.WORKDIR }}/deployment.tar.gz << 'EOF'
            $(base64 -w 0 < deployment.tar.gz)
            EOF
            cd ${{ env.WORKDIR }}
            base64 -d deployment.tar.gz | tar -xz
            rm deployment.tar.gz
            # Copy the directories to their respective locations
            cp -r keycloak ${{ env.WORKDIR }}/keycloak
            cp -r monitoring ${{ env.WORKDIR }}/monitoring

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_SSH_HOST }}
          username: ${{ secrets.VPS_SSH_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            mkdir -p ${{ env.WORKDIR }} && cd ${{ env.WORKDIR }}

            echo "${{ secrets.ENV_FILE }}" > .env

            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker compose pull
            docker compose up -d --remove-orphans
